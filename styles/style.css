.page {
    min-inline-size: 320px;
    min-block-size: 100dvb;
    padding-inline: clamp(0px, calc(100% - 1024px), 370px);
    font-family: var(--text-main-font);
    font-variation-settings: 'wght' var(--text-font-weight);
    font-size: 18px;
    font-style: normal;
    line-height: 1.1666666666666667em;
    color: var(--accent-color);
    background-color: var(--themes-background);
    background-image: var(--themes-background-image);
    background-size: cover;
    background-attachment: fixed;
}

.header {
    display: flex;
    inline-size: 100%;
    flex-direction: column;
    align-items: center;
    margin-block: 100px;
    font-family: var(--text-accent-font);
    font-size: 14px;
    font-style: normal;
    font-weight: 400;
    line-height: normal;
    border: 2px solid var(--themes-border-color);
    background-color: var(--themes-background);
}

.header__title-large {
    font-size: clamp(3.0625rem, 2.7104rem + 1.5023vw, 4.0625rem);
    font-weight: 400;
    text-transform: uppercase;
    margin-block-start: 136px;
    margin-block-end: 20px;
}

.header__title-small {
    font-size: clamp(0.875rem, 0.6769rem + 0.8451vw, 1.4375rem);
    margin-block-end: 25px;
    text-transform: uppercase;
}

.theme-menu {
    margin-left: 16px;
}

.theme-menu__list {
    display: flex;
    flex-direction: column;
    gap: 14px;
    margin-block-end: 25px;
}

.theme-menu__button {
    position: relative;
    background-color: transparent;
    text-align: start;
    border: none;
    padding: 0;
    text-transform: uppercase;
    min-inline-size: 84px;
    min-block-size: 14px;
    cursor: pointer;
    transition: opacity 0.3s ease;
}

.theme-menu__button:disabled {
    pointer-events: none;
    opacity: 0.6;
}

.theme-menu__button:hover {
    opacity: 0.6;
}

.button__name {
    position: relative;
    width: min-content;
}

.button__name::after {
    content: "";
    position: absolute;
    inset-block-end: -1px;
    inset-inline-start: 0;
    background-color: var(--accent-color);
    height: 2px;
    width: 100%;
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.3s ease;
}

.theme-menu__button:focus {
    outline: none;
    opacity: 0.6;
}

.theme-menu__button:focus-visible .button__name::after {
    transform: scaleX(1);
}

.theme-menu__button:disabled::before {
    content: '▶';
    position: absolute;
    inset-inline-start: -19px;
    animation-name: arrow-movement;
    animation-duration: 0.5s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
    animation-direction: alternate;
}

.filter-mixed-brightness {
    filter: brightness(150%) saturate(60%) hue-rotate(90deg);
}

.filter-sepia {
    filter: sepia(70%);
}

.filter-saturate {
    filter: saturate(130%);
}

.filter-grayscale {
    filter: grayscale(1);
}

.filter-mixed-blur {
    filter: blur(2px) brightness(3) hue-rotate(30deg) saturate(1.5);
}

.filter-mixed-contrast {
    filter: brightness(0.8) contrast(1.2) grayscale(0.5);
}

.filter-mixed-saturate {
    filter: saturate(115%) opacity(0.85);
}

.content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 50px;
}

.content__card {
    background-color: var(--themes-background);
}

.content__list {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 50px;
}

.card__image {
    display: block;
    width: 100%;
    aspect-ratio: 1 / 1;
    object-fit: cover;
}

.card__title {
    font-variation-settings: 'wght' var(--title-font-weight);
    font-size: 18px;
    line-height: 23px;
    padding-inline: 10px;
    padding-block-start: 4px;
    padding-block-end: 2px;
    min-block-size: 35px;
    border: 2px solid var(--themes-border-color);
}

.card__image-box {
    position: relative;
    border-inline: 2px solid var(--themes-border-color);
    border-bottom: 2px solid var(--themes-border-color);
}

.card__label {
    position: absolute;
    inset-block-start: 25px;
    inset-inline-end: 25px;
    font-family: var(--text-accent-font);
    font-size: 14px;
    text-shadow: -1px 0 var(--stroke-color),
    0 1px var(--stroke-color),
    1px 0 var(--stroke-color),
    0 -1px var(--stroke-color);
    opacity: 0.5;
    mix-blend-mode: hard-light;
}

@supports (-webkit-text-stroke: 1px var(--stroke-color)) {
    .card__label {
        -webkit-text-stroke: 1px var(--stroke-color);
        text-shadow: none;
    }
}

.card__description-box {
    padding: 25px;
    border-inline: 2px solid var(--themes-border-color);
}

.card__text:not(:last-child) {
    margin-block-end: 27px;
}

.card__actions-box {
    display: flex;
    justify-content: flex-end;
    gap: 4px;
    align-items: center;
    min-block-size: 38px;
    padding-inline: 25px;
    padding-bottom: 25px;
    border-inline: 2px solid var(--themes-border-color);
    border-bottom: 2px solid var(--themes-border-color);
}

.button {
    position: relative;
    border: 2px solid var(--themes-border-color);
    color: var(--button-text-color);
    background-color: transparent;
    padding: 0;
    transition: box-shadow 0.3s ease;
}

.card__like-button {
    min-inline-size: 130px;
    min-block-size: 38px;
}

.button__text {
    mix-blend-mode: difference;
}

.button:not(.card__icon-button)::before {
    content: "";
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: 0;
    display: block;
    width: 100%;
    height: 100%;
    background-color: var(--button-animation-background);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.5s ease-in-out
}

.button:hover::before {
    transform: scaleX(1);
}

.button:focus {
    outline: none;
}

.button:focus-visible:not(.card__icon-button) {
    box-shadow: 2px 2px var(--accent-color);
}

.card__icon-button {
    block-size: 38px;
    border-color: transparent;
    transition: fill 0.3s linear, border-color 0.3s ease;
}

.contour {
    transition: fill 0.1s linear;
}

.main-body {
    fill: transparent;
    transition: fill 0.3s linear;
}

.core {
    fill: transparent;
    transition: fill 0.3s linear;
    transition-delay: 0.03s;
}

/*.card__icon-button:hover .main-body {
Здесь и далее надо добавить transition по заданию
}
Какие именно transition вы имеете ввиду? По тз transition соблюдены.

Основное тело сердца при наведении курсора перекрашивайте с задержкой в 0.05s в течение 0.3s.
А когда курсор уходит с сердца, основное тело, наоборот, становится прозрачным без задержек и
перекрашивается всё те же 0.3s

.main-body { <----- основной селектор
    fill: transparent;
    transition: fill 0.3s linear; работате в обе стороны
}

.card__icon-button:hover .main-body {
    fill: var(--accent-color);
    transition-delay: 0.05s; задержка при наведении.
}


Меняйте значение у сердцевины сразу же при наведении мышки и в течение 0.3s. А в
обратной ситуации, когда курсор уходит, — с задержкой в 0.03s

.core { <----- основной селектор
    fill: transparent;
    transition: fill 0.3s linear; работате в обе стороны
    transition-delay: 0.03s; курсор уходит, — с задержкой в 0.03s
}

.card__icon-button:hover .core {
    fill: var(--accent-color);
    transition-delay: 0s; сразу же при наведении. (в прошлой версии кода упустил этот момент,
    менялось с задержкой 0.03s. Возможно вы имели ввиду эту часть кода?)
} */

.card__icon-button:hover .main-body {
    fill: var(--accent-color);
    transition-delay: 0.05s;
}

.card__icon-button:hover .core {
    fill: var(--accent-color);
    transition-delay: 0s;
}

.card__icon-button:active .main-body {
    fill: var(--heart-fill-color);
    transition-delay: 0.05s;
}

.card__icon-button:active .core {
    fill: var(--heart-fill-color);
    transition-delay: 0s;
}

.like-icon.is-liked .main-body {
    fill: var(--heart-fill-color);
}

.like-icon.is-liked .core {
    fill: var(--heart-fill-color);
}

.like-icon.is-liked .contour {
    fill: var(--heart-fill-color);
    transition: fill 0.3s linear;
    transition-delay: 0.06s;
}

.sparks {
    opacity: 0;
}

.like-icon.is-liked .sparks {
    animation-name: spark;
    animation-delay: 0.3s;
    animation-duration: 0.3s;
    animation-timing-function: ease-in;
}

.card__icon-button:focus {
    outline: none;
}

.card__icon-button:focus-visible {
    border: 2px solid var(--accent-color);
}

.content__actions {
    margin-block-end: 102px;
    background-color: var(--themes-background);
}

.content__button {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
    min-inline-size: 339px;
    min-block-size: 55px;
}

.content__button:hover::before {
    transform: scaleX(1);
}

.floppy {
    width: 21px;
    height: 21px;
    mix-blend-mode: difference;
}

.content__dialog {
    max-inline-size: 361px;
    background-color: var(--themes-background);
    color: var(--button-text-color);
    font-family: var(--text-accent-font);
    font-size: 14px;
    text-transform: uppercase;
    border: 2px solid var(--themes-border-color);
}

.content__dialog::backdrop {
    background-color: #000;
    opacity: 0.75;
}

.content__dialog[open] .floppy {
    fill: var(--accent-color);
    min-inline-size: 39px;
    min-block-size: 39px;
}

.content__dialog[open] {
    display: flex;
    flex-direction: column;
    gap: 30px;
    padding: 30px 40px;
    justify-content: center;
}

.dialog__content {
    display: flex;
    gap: 20px;
}

.dialog__text {
    mix-blend-mode: difference;
}

.dialog__button {
    min-inline-size: var(--dialog-button-min-width);
    min-block-size: var(--dialog-button-min-height);
    text-transform: uppercase;
}

@media (width <= 375px) {
    .floppy {
        width: 28px;
        height: 28px;
    }

    .content__button {
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-inline-size: 310px;
        min-block-size: 84px;
    }

    .header__title-large {
        margin-block-start: 120px;
    }

    .theme-menu {
        margin-left: 21px;
    }

    .card__label {
        inset-block-start: 20px;
        inset-inline-end: 11px;
    }

    .content__dialog {
        max-inline-size: 345px;
    }
}


